group = 'com.codineers.springopenapi'
version = '1.0.0'

ext {
    hibernateVersion = '6.0.2.Final'
    jacksonVersion = '2.9.1'
    commonsLangVersion = '3.6'
    powermockVersion = '1.7.3'
    junitVersion = '5.0.0'
}

buildscript {
    ext {
        springBootVersion = '2.0.0.BUILD-SNAPSHOT'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo1.maven.org/maven2" }
        maven { url "http://oss.jfrog.org/artifactory/oss-release-local" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: "java"
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo1.maven.org/maven2" }
    maven { url "http://oss.jfrog.org/artifactory/oss-release-local" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-cache")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-validation")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.hibernate:hibernate-validator:${hibernateVersion}")
    compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}")
    compile("org.apache.commons:commons-lang3:${commonsLangVersion}")

    compileOnly("org.springframework.boot:spring-boot-configuration-processor")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
    testCompile("org.powermock:powermock-api-mockito:${powermockVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

jar {
    baseName "spring-openapi-core"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

