package com.codineers.springopenapi.core.model;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

/**
 * Defines a security scheme that can be used by the operations. Supported schemes are HTTP authentication, an API key
 * (either as a header or as a query parameter), OAuth2's common flows (implicit, password, application and access
 * code) as defined in RFC6749, and OpenID Connect Discovery.
 */
public class SecuritySchemeObject {
    /**
     * The type of the security scheme. Valid values are "apiKey", "http", "oauth2", "openIdConnect".
     *
     * Applies to: Any
     */
    @NotBlank
    private String type;

    /**
     * A short description for security scheme. CommonMark syntax MAY be used for rich text representation.
     *
     * Applies to: Any
     */
    private String description;

    /**
     * The name of the header, query or cookie parameter to be used.
     *
     * Applies to: apiKey
     */
    @NotBlank
    private String name;

    /**
     * The location of the API key. Valid values are "query", "header" or "cookie".
     *
     * Applies to: apiKey
     */
    @NotBlank
    private String in;

    /**
     * The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235.
     *
     * Applies to: http
     */
    @NotBlank
    private String scheme;

    /**
     * A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an
     * authorization server, so this information is primarily for documentation purposes.
     *
     * Applies to: http ("bearer")
     */
    private String bearerFormat;

    /**
     * An object containing configuration information for the flow types supported.
     *
     * Applies to: oauth2
     */
    @NotNull
    private OAuthFlowsObject flows;

    /**
     * OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.
     *
     * Applies to: openIdConnect
     */
    @NotBlank
    private String openIdConnectUrl;


}
